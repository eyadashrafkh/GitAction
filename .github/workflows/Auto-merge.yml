name: Enable automerge on specific users PRs and dependabot PRs

run-name: ${{ github.actor }} is testing auto-merging ðŸš€

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
    paths-ignore:
      - .github/workflows/your-workflow-file.yml  # Replace with your actual workflow file name

jobs:
  automerge:
    name: Enable automerge on specific users PRs and dependabot PRs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if PR Creator is in the List of Users
        id: check_user
        run: |
          USERS_JSON='["user1", "user2", "user3", "dependabot[bot]", "iyadKhamis"]'
          echo "USERS_JSON=${USERS_JSON}"
          if echo "$USERS_JSON" | jq -e ".[] == \"${{ github.actor }}\"" >/dev/null; then
            echo "USER_IN_LIST=true" >> $GITHUB_ENV
            echo "True"
          else
            echo "USER_IN_LIST=false" >> $GITHUB_ENV
            echo "False"
          fi

      - name: Set auto-merge conditions
        id: auto_merge_conditions
        run: |
          echo "Checking conditions..."
          echo "After conditions, USER_IN_LIST=${USER_IN_LIST}"
          echo "After conditions, USER_IN_LIST=${{ env.USER_IN_LIST }}"

          echo "draft: ${{ github.event.pull_request.draft }}"
          echo "merge: ${{ github.event.pull_request.mergeable_state }}"
          
          if [ "${USER_IN_LIST}" = "true" ] && [ "${{ github.event.pull_request.draft }}" = "false" ] && [ "${{ github.event.pull_request.mergeable_state }}" = "clean" ]; then
            echo "AUTO_MERGE=true" >> $GITHUB_ENV
            echo "AUTO_MERGE=true"
            echo "True"
          else
            echo "AUTO_MERGE=false" >> $GITHUB_ENV
            echo "false"
          fi
          echo "AUTO_MERGE=${AUTO_MERGE}"

      - name: Auto Merge Bot
        if: ${{ env.AUTO_MERGE == 'true' }}
        uses: casassg/auto-merge-bot@v0.3.6
        with:
          # Optional: The path to the root folder where it should look for code owners
          cwd: ./
          # Optional: The merge strategy to use: 'merge', 'squash', or 'rebase'
          merge_method: merge  # You can change this to 'squash' or 'rebase' as needed
          # Optional: Whether to assign or not a reviewer
          assign_reviewer: false  # Set to `true` if you want to assign a reviewer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure GITHUB_TOKEN is provided

      - name: No Merge Due to Conditions Not Met
        if: ${{ env.AUTO_MERGE == 'false' }}
        run: |
          echo "No merge due to conditions not met. User is either not in the list, PR is a draft, or PR is not in a clean state."
          echo "AUTO_MERGE=${{ env.AUTO_MERGE }}"

      - name: Merge Due to Conditions Met
        if: ${{ env.AUTO_MERGE == 'true' }}
        run: |
          echo "Merge due to conditions met. User is in the list and PR is ready for merge."
          echo "AUTO_MERGE=${{ env.AUTO_MERGE }}"
